install.packages("bnlearn") ## este é o pacote em R com as funções das redes bayseanas
library(bnlearn) ## vamos usar esta biblioteca
install.packages("caret", dependencies = T) ## esta é outra biblioteca nescessária para usar as redes bayseanas
library(caret)
res <- hc(insurance) ## Aqui estamos colocando dentr da váriavel (res) o nosso banco de dados de casos
plot(res) ## Podemos ver o grafico gerado correlacionando os atributos do nosso banco de dados
modelo <- bn.fit(res, data = insurance)
View(modelo)
View(modelo)
plot(modelo)
modelo$GoodStudent ## Aqui vamos ver apenas as probabilidades do atributo (bom estudante)
cpquery(modelo, event = (Accident == "Moderate" | Accident == "Severe"),
evidence = (Age == "Senior" & RiskAversion == "Adventurous" & MakeModel == "SportCar"))
cpquery(modelo, event = (Accident == "Moderate" | Accident == "Severe"),
evidence = (Age == "Senior" & RiskAversion == "Adventurous" & MakeModel == "SportCar"))
cpquery(modelo, event = (Accident == "Moderate" | Accident == "Severe"),
evidence = (Age == "Senior" & RiskAversion == "Adventurous" & MakeModel == "SportCar"))
cpquery(modelo, event = (Accident == "Moderate" | Accident == "Severe"),
evidence = (Age == "Senior" & RiskAversion == "Adventurous" & MakeModel == "SportCar"))
cpquery(modelo, event = (Accident=="Moderate" | Accident=="Severe"),
evidence = (Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
joao <-cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
joao
plot(joao)
maria <-cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
plot(maria)
maria
karina <-cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"), n =10000000)
kissila <-cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"), n =10000000)
karina
kissila
plot(karina)
plot(kissila)
kissila <-cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"), n =10000000)
kissila <-cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"), n =10000000)
goku <-cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"), n =10000000)
pedrita <-cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"), n =10000000)
pedrita
goku
plot(pedrita)
joao <-cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
library(bnlearn) ## vamos usar esta biblioteca
install.packages("caret", dependencies = T) ## esta é outra biblioteca nescessária para usar as redes bayseanas
library(caret)
res <- hc(insurance)
plot(res) ## Podemos ver o grafico gerado correlacionando os atributos do nosso banco de dados
modelo <- bn.fit(res, data = insurance)
joao <-cpquery(modelo, event =(Accident=="Moderate" | Accident=="Severe"),
evidence =(Age=="Senior" & RiskAversion=="Adventurous" & MakeModel=="SportsCar"))
joao
plot(joao)
